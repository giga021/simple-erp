{"version":3,"sources":["userManager.js","App/Header.js","Home/index.js","App/ErrorMessage.js","showMessage.js","utils.js","actions/index.js","reducers/subscriptions.js","reducers/index.js","store.js","Common/KontaApi.js","GlavnaKnjiga/Obrada/ObradaStavkeForm.js","GlavnaKnjiga/Obrada/ObradaNalogaPregledStavki.js","GlavnaKnjiga/NaloziApi.js","Common/TipoviNalogaApi.js","GlavnaKnjiga/Obrada/ObradaNalogaForm.js","GlavnaKnjiga/Obrada/ObradaNaloga.js","GlavnaKnjiga/GlavnaKnjiga.js","GlavnaKnjiga/index.js","KarticaKonta/KarticaKontaApi.js","KarticaKonta/KarticaKonta.js","KarticaKonta/index.js","CallbackPage.js","App/Main.js","App/LoginPage.js","App/Entry.js","App/index.js","serviceWorker.js","index.js"],"names":["userManagerConfig","client_id","redirect_uri","concat","window","location","protocol","hostname","port","response_type","scope","authority","process","silent_redirect_uri","automaticSilentRenew","filterProtocolClaims","loadUserInfo","post_logout_redirect_uri","userManager","createUserManager","Header","react_default","a","createElement","reactstrap_es","color","dark","expand","tag","Link","to","isOpen","navbar","className","href","onClick","createSignoutRequest","then","x","getUser","u","removeUser","url","id_token","Home","ErrorMessage","props","title","message","additional","showMessage","info","content","toast","warning","warn","error","App_ErrorMessage","parseJson","response","ok","json","status","statusText","showApiError","LOAD_SUBSCRIPTIONS_SUCCESS","initialState","channels","reducers","combineReducers","oidc","oidcReducer","subscriptions","state","arguments","length","undefined","action","type","SESSION_TERMINATED","USER_EXPIRED","Object","assign","payload","store","compose","applyMiddleware","next","console","log","getState","createStore","createStoreWithMiddleware","__REDUX_DEVTOOLS_EXTENSION__","loadUser","KontaApi","getKonta","fetch","method","headers","Authorization","user","access_token","catch","e","ObradaStavkeForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitForm","bind","assertThisInitialized","validate","konta","initialValues","Id","uuid","IdKonto","Konto","Duguje","Potrazuje","Opis","Stornirana","_this2","setState","values","actions","find","k","Sifra","dodajStavku","history","goBack","errors","isNaN","duguje","parseFloat","potrazuje","_this3","formik_esm","ref","r","form","handleSubmit","alert","onSubmit","render","_ref","touched","handleBlur","handleChange","isSubmitting","Field","name","component","map","t","key","value","Naziv","msg","Component","ObradaNalogaPregledStavki","hover","size","style","width","stavke","s","toLocaleString","minimumFractionDigits","maximumFractionDigits","disabled","stornirajStavku","fa","ukloniStavku","NaloziApi","getGlavnaKnjiga","submitNalog","nalog","Content-Type","body","JSON","stringify","getPromena","id","zakljucaj","version","otkljucaj","obrisi","TipoviNalogaApi","getTipovi","ObradaNalogaForm","tipovi","Datum","Date","toJSON","slice","IdTip","data","fromJS","Stavke","getInitialValues","setSubmitCallback","idNaloga","set","_this4","toJS","setSubmitting","close","setStatus","get","isEmpty","_this5","newState","updateIn","list","update","findIndex","item","validateForm","_this6","itemIdx","remove","stavka","_this7","push","_this8","enableReinitialize","Obrada_ObradaNalogaPregledStavki","Route","exact","path","Obrada_ObradaStavkeForm","ObradaNaloga","submitFormCallback","match","params","Obrada_ObradaNalogaForm","GlavnaKnjiga","cellStyle","display","flexDirection","justifyContent","iznosCellStyle","textAlign","columns","accessor","Cell","toLocaleDateString","otkljucajNalog","original","Version","zakljucajNalog","Zakljucan","obrisiNalog","react_table_es","nalozi","GlavnaKnjigaContainer","initSignalr","startSignalr","reloadData","reconnectSignalr","hubConnection","HubConnectionBuilder","withUrl","accessTokenFactory","configureLogging","LogLevel","Trace","build","on","valErrors","validationErrors","join","onclose","start","err","setTimeout","stop","src_GlavnaKnjiga_GlavnaKnjiga","Switch_default","connect","dispatch","KarticaKontaApi","getKarticaKonta","KarticaKonta","onChange","setKonto","target","kartica","KarticaKontaContainer","idKonto","src_KarticaKonta_KarticaKonta","CallbackPage","redux_oidc","successCallback","errorCallback","React","Main","iconContext","Provider","Switch","lib","LoginPage","event","signinRedirect","styles","root","login","alignItems","flexShrink","Entry","expired","App_LoginPage","App_Header","App_Main","withRouter","App","es","App_Entry","Boolean","pathname","processSilentRenew","ReactDOM","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a771f4c1.chunk.js","sourcesContent":["import { createUserManager } from 'redux-oidc';\r\n\r\nconst userManagerConfig = {\r\n  client_id: 'js',\r\n  redirect_uri: `${window.location.protocol}//${window.location.hostname}${window.location.port ? `:${window.location.port}` : ''}/callback`,\r\n  response_type: 'token id_token',\r\n  scope: 'openid profile knjizenje',\r\n  authority: process.env.REACT_APP_IDENTITY_HOST,\r\n  silent_redirect_uri: `${window.location.protocol}//${window.location.hostname}${window.location.port ? `:${window.location.port}` : ''}/silent-renew`,\r\n  automaticSilentRenew: true,\r\n  filterProtocolClaims: true,\r\n  loadUserInfo: true,\r\n  post_logout_redirect_uri: `${window.location.protocol}//${window.location.hostname}${window.location.port ? `:${window.location.port}` : ''}/`,\r\n};\r\n\r\nconst userManager = createUserManager(userManagerConfig);\r\nexport default userManager;","import React from 'react'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport userManager from 'userManager';\r\n\r\nconst Header = () => (\r\n  <Navbar color=\"primary\" dark expand=\"md\">\r\n    <NavbarBrand tag={Link} to=\"/\">Početna</NavbarBrand>\r\n    <Collapse isOpen={true} navbar>\r\n      <Nav className=\"ml-auto\" navbar>\r\n        <NavItem><NavLink tag={Link} to=\"/glavna-knjiga\">Glavna knjiga</NavLink></NavItem>\r\n        <NavItem><NavLink tag={Link} to=\"/kartica-konta\">Kartica konta</NavLink></NavItem>\r\n        <NavItem>\r\n          <NavLink href=\"#\" onClick={() => {\r\n            userManager.createSignoutRequest().then(x => {\r\n              userManager.getUser().then(u => {\r\n                userManager.removeUser();\r\n                window.location = `${x.url}&id_token_hint=${u.id_token}`\r\n                //fetch(`${x.url}&id_token_hint=${u.id_token}`);\r\n              })\r\n            });\r\n          }}>Odjava</NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n    </Collapse>\r\n  </Navbar>\r\n)\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h1>Simple-ERP demo</h1>\r\n  </div>\r\n)\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst ErrorMessage = (props) => (\r\n  <div className='error-toast'>\r\n      <div className='error-title'>{props.title}</div>\r\n      <div className='error-message'>{props.message}</div>\r\n      <div className='error-additional'>{props.additional}</div>\r\n  </div>\r\n)\r\nexport default ErrorMessage","import { toast } from 'react-toastify';\r\nimport ErrorMessage from './App/ErrorMessage';\r\nimport React from 'react'\r\n\r\nconst showMessage = {\r\n    info: (content) => toast.info(content),\r\n    warning: (content) => toast.warn(content),\r\n    error: (content, title, additional) => \r\n        toast.error(<ErrorMessage title={title} message={content} additional={additional} />)\r\n}\r\nexport default showMessage;","import showMessage from './showMessage'\r\n\r\nconst parseJson = (response) => {\r\n  if (response.ok) {\r\n    return response.json();\r\n  }\r\n  else {\r\n    let error = `${response.status} ${response.statusText}`;\r\n    showApiError(error, response.url);\r\n  }\r\n}\r\n\r\nconst showApiError = (message, url) => {\r\n  showMessage.error(message, 'API greška', url);\r\n}\r\n\r\nexport { parseJson, showApiError };","export const LOAD_SUBSCRIPTIONS_START =\r\n  \"redux-oidc-sample/LOAD_SUBSCRIPTIONS_START\";\r\nexport const LOAD_SUBSCRIPTIONS_SUCCESS =\r\n  \"redux-oidc-sample/LOAD_SUBSCRIPTIONS_SUCCESS\";\r\n\r\nexport function loadSubscriptionsStart() {\r\n  return {\r\n    type: LOAD_SUBSCRIPTIONS_START\r\n  };\r\n}\r\n\r\nexport function loadSubscriptionsSuccess(channels) {\r\n  return {\r\n    type: LOAD_SUBSCRIPTIONS_SUCCESS,\r\n    payload: channels\r\n  };\r\n}","import { LOAD_SUBSCRIPTIONS_SUCCESS } from \"../actions\";\r\nimport { SESSION_TERMINATED, USER_EXPIRED } from \"redux-oidc\";\r\n\r\nconst initialState = {\r\n  channels: []\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SESSION_TERMINATED:\r\n    case USER_EXPIRED:\r\n      return Object.assign({}, state, { channels: [] });\r\n    case LOAD_SUBSCRIPTIONS_SUCCESS:\r\n      return Object.assign({}, state, { channels: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as oidcReducer } from 'redux-oidc';\r\nimport subscriptionsReducer from './subscriptions';\r\n\r\nconst reducers = combineReducers(\r\n  {\r\n    oidc: oidcReducer,\r\n    subscriptions: subscriptionsReducer\r\n  }\r\n);\r\n\r\nexport default reducers;","import { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport { loadUser } from \"redux-oidc\";\r\nimport reducers from \"reducers\";\r\nimport userManager from \"userManager\";\r\n\r\nconst loggerMiddleware = store => next => action => {\r\n  console.log(\"Action type:\", action.type);\r\n  console.log(\"Action payload:\", action.payload);\r\n  console.log(\"State before:\", store.getState());\r\n  next(action);\r\n  console.log(\"State after:\", store.getState());\r\n};\r\n\r\nconst initialState = {};\r\n\r\nconst createStoreWithMiddleware = compose(\r\n  applyMiddleware(loggerMiddleware)\r\n)(createStore);\r\n\r\nconst store = createStoreWithMiddleware(reducers, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nloadUser(store, userManager);\r\n\r\nexport default store;","import 'whatwg-fetch';\r\nimport { parseJson, showApiError } from 'utils'\r\nimport store from \"store\";\r\n\r\nconst KontaApi = {\r\n  getKonta: () => {\r\n    return fetch(`/api/konta`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization : `Bearer ${store.getState().oidc.user.access_token}`\r\n      }\r\n    })\r\n      .then(parseJson)\r\n      .catch(e => showApiError(e.message))\r\n  }\r\n}\r\n\r\nexport default KontaApi;","import React, { Component } from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport {\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  ModalFooter, Input, Label, FormGroup\r\n} from 'reactstrap';\r\nimport uuid from 'uuid/v4';\r\nimport KontaApi from 'Common/KontaApi'\r\n\r\n\r\nclass ObradaStavkeForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.state = {\r\n      konta: []\r\n    }\r\n    this.initialValues = {\r\n      Id: uuid(),\r\n      IdKonto: '',\r\n      Konto: '',\r\n      Duguje: '0',\r\n      Potrazuje: '0',\r\n      Opis: '',\r\n      Stornirana: false,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    KontaApi.getKonta()\r\n      .then(konta => this.setState({\r\n        konta: konta\r\n      }));\r\n  }\r\n\r\n  submitForm(values, actions) {\r\n    values.Konto = this.state.konta.find(k => k.Id == values.IdKonto).Sifra\r\n    this.props.dodajStavku(values);\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  validate(values) {\r\n    let errors = {};\r\n\r\n    if (!values.IdKonto)\r\n      errors.IdKonto = 'Konto je obavezan podatak';\r\n\r\n    if (isNaN(values.Duguje) || !values.Duguje)\r\n      errors.Duguje = 'Iznos nije u korektnom formatu';\r\n    if (isNaN(values.Potrazuje) || !values.Potrazuje)\r\n      errors.Potrazuje = 'Iznos nije u korektnom formatu';\r\n\r\n    if (!errors.Duguje && !errors.Potrazuje) {\r\n      let duguje = parseFloat(values.Duguje);\r\n      let potrazuje = parseFloat(values.Potrazuje);\r\n      if (duguje !== 0 && potrazuje !== 0) {\r\n        errors.Duguje = 'Iznos samo sa jedne strane stavke može biti definisan';\r\n        errors.Potrazuje = 'Iznos samo sa jedne strane stavke može biti definisan';\r\n      } else if (duguje === 0 && potrazuje === 0) {\r\n        errors.Duguje = 'Iznos sa jedne strane stavke mora biti definisan';\r\n        errors.Potrazuje = 'Iznos sa jedne strane stavke mora biti definisan';\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  render() {\r\n    return <Modal isOpen={true}>\r\n      <ModalHeader>Nova stavka</ModalHeader>\r\n      <ModalBody>\r\n        <Formik\r\n          ref={(r) => this.form = r}\r\n          initialValues={this.initialValues}\r\n          validate={this.validate}\r\n          handleSubmit={() => alert('handling')}\r\n          onSubmit={(values, actions) => this.submitForm(values, actions)}\r\n          render={({ values,\r\n            errors,\r\n            status,\r\n            touched,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            isSubmitting }) => (\r\n              <Form>\r\n                <FormGroup>\r\n                  <Label >Konto</Label>\r\n                  <Input\r\n                    tag={Field}\r\n                    name='IdKonto'\r\n                    component='select'>\r\n                    <option></option>\r\n                    {this.state.konta.map(t =>\r\n                      <option key={t.Id} value={t.Id}>{t.Sifra} {t.Naziv}</option>)}\r\n                  </Input>\r\n                  <ErrorMessage name=\"IdKonto\" component=\"div\" className=\"text-danger\" />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label >Duguje</Label>\r\n                  <Input\r\n                    tag={Field}\r\n                    name='Duguje'\r\n                    type='number'\r\n                    component='input'\r\n                  />\r\n                  <ErrorMessage name=\"Duguje\" component=\"div\" className=\"text-danger\" />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label >Potražuje</Label>\r\n                  <Input\r\n                    tag={Field}\r\n                    name='Potrazuje'\r\n                    type='number'\r\n                    component='input'\r\n                  />\r\n                  <ErrorMessage name=\"Potrazuje\" component=\"div\" className=\"text-danger\" />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label >Opis</Label>\r\n                  <Input\r\n                    tag={Field}\r\n                    name='Opis'\r\n                    type='text'\r\n                    component='input'\r\n                  />\r\n                  <ErrorMessage name=\"Opis\" component=\"div\" className=\"text-danger\" />\r\n                </FormGroup>\r\n                {status && status.msg && <div className=\"text-danger\">{status.msg}</div>}\r\n              </Form>\r\n            )}\r\n        />\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button onClick={() => this.form.submitForm()} color=\"primary\">Sačuvaj</Button>\r\n        <Button onClick={this.props.history.goBack}>Nazad</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  }\r\n}\r\n\r\nexport default ObradaStavkeForm;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Button, Table\r\n} from 'reactstrap';\r\nimport { FaStop, FaMinus } from 'react-icons/fa';\r\n\r\n\r\nclass ObradaNalogaPregledStavki extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h6>Stavke</h6>\r\n        <Table hover size=\"sm\" className='stavke-table'>\r\n          <thead>\r\n            <tr>\r\n              <th>Konto</th>\r\n              <th className='right'>Duguje</th>\r\n              <th className='right'>Potražuje</th>\r\n              <th className='right' style={{width: 110}}></th>\r\n              <th className='right' style={{width: 100}}></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.stavke.map(s => {\r\n              let className = '';\r\n              if (s.Stornirana)\r\n                className = 'stornirana';\r\n\r\n              return <tr key={s.Id} className={className}>\r\n                <td>{s.Konto}</td>\r\n                <td className='right'>{s.Duguje.toLocaleString('sr',\r\n                  { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                <td className='right'>{s.Potrazuje.toLocaleString('sr',\r\n                  { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                <td className='right'>\r\n                  <Button color=\"warning\"\r\n                    disabled={s.Stornirana}\r\n                    onClick={() => this.props.stornirajStavku(s.Id)}>\r\n                    <FaStop />Storniraj\r\n                    </Button>\r\n                </td>\r\n                <td className='right'>\r\n                  <Button color=\"danger\"\r\n                    disabled={s.Stornirana}\r\n                    onClick={() => this.props.ukloniStavku(s.Id)}>\r\n                    <FaMinus />Ukloni\r\n                    </Button>\r\n                </td>\r\n              </tr>\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ObradaNalogaPregledStavki;\r\n","import 'whatwg-fetch';\r\nimport { parseJson } from '../utils'\r\nimport store from \"store\";\r\n\r\nconst NaloziApi = {\r\n  getGlavnaKnjiga: () => {\r\n    return fetch(`/api/glavnaKnjiga`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization : `Bearer ${store.getState().oidc.user.access_token}`\r\n      }\r\n    }).then(parseJson)\r\n  },\r\n  \r\n  submitNalog: (nalog) => {\r\n    return fetch('/api/nalozi', {\r\n      method: nalog.Id ? 'PUT' : 'POST',\r\n      headers: {\r\n        Authorization : `Bearer ${store.getState().oidc.user.access_token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(nalog)\r\n    })\r\n  },\r\n\r\n  getPromena: (id) => {\r\n    return fetch(`/api/nalozi/promena/${id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization : `Bearer ${store.getState().oidc.user.access_token}`\r\n      }\r\n    }).then(parseJson)\r\n  },\r\n\r\n  zakljucaj: (id, version) => {\r\n    return fetch(`/api/nalozi/${id}/zakljucaj?version=${version}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization : `Bearer ${store.getState().oidc.user.access_token}`\r\n      }\r\n    });\r\n  },\r\n\r\n  otkljucaj: (id, version) => {\r\n    return fetch(`/api/nalozi/${id}/otkljucaj?version=${version}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization : `Bearer ${store.getState().oidc.user.access_token}`\r\n      }\r\n    });\r\n  },\r\n\r\n  obrisi: (id, version) => {\r\n    return fetch(`/api/nalozi/${id}?version=${version}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization : `Bearer ${store.getState().oidc.user.access_token}`\r\n      }\r\n    });\r\n  },\r\n}\r\n\r\nexport default NaloziApi;","import 'whatwg-fetch';\r\nimport { parseJson } from '../utils'\r\nimport store from \"store\";\r\n\r\nconst TipoviNalogaApi = {\r\n  getTipovi: () => {\r\n    return fetch(`/api/tipoviNaloga`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization : `Bearer ${store.getState().oidc.user.access_token}`\r\n      }\r\n    }).then(parseJson);\r\n  }\r\n}\r\n\r\nexport default TipoviNalogaApi;","import React, { Component } from 'react';\r\nimport { Input, Label, FormGroup, Button } from 'reactstrap';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport { fromJS } from 'immutable'\r\nimport { Link, Route } from 'react-router-dom'\r\nimport ObradaStavkeForm from './ObradaStavkeForm';\r\nimport ObradaNalogaPregledStavki from './ObradaNalogaPregledStavki';\r\nimport NaloziApi from '../NaloziApi'\r\nimport TipoviNalogaApi from '../../Common/TipoviNalogaApi'\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nclass ObradaNalogaForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.stornirajStavku = this.stornirajStavku.bind(this);\r\n    this.ukloniStavku = this.ukloniStavku.bind(this);\r\n    this.dodajStavku = this.dodajStavku.bind(this);\r\n    this.state = {\r\n      tipovi: [],\r\n      initialValues: {\r\n        Datum: new Date().toJSON().slice(0, 10),\r\n        IdTip: '',\r\n        Opis: '',\r\n      },\r\n      data: fromJS({\r\n        Stavke: []\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    TipoviNalogaApi.getTipovi()\r\n      .then(tipovi => this.setState({\r\n        tipovi: tipovi\r\n      }));\r\n\r\n    this.getInitialValues();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setSubmitCallback(this.form.submitForm);\r\n  }\r\n\r\n  getInitialValues() {\r\n    if (this.props.idNaloga) {\r\n      NaloziApi.getPromena(this.props.idNaloga)\r\n        .then(nalog => {\r\n          nalog.Datum = nalog.Datum.slice(0, 10);\r\n          this.setState({\r\n            initialValues: nalog,\r\n            data: this.state.data.set('Stavke', fromJS(nalog.Stavke))\r\n          })\r\n        });\r\n    }\r\n  }\r\n\r\n  submitForm(values, actions) {\r\n    const stavke = this.state.data.toJS().Stavke;\r\n    values.Stavke = stavke;\r\n    NaloziApi.submitNalog(values)\r\n      .then(() => {\r\n        actions.setSubmitting(false);\r\n        this.props.close();\r\n      },\r\n        error => {\r\n          actions.setSubmitting(false);\r\n          actions.setStatus({ msg: error.message });\r\n        }\r\n      );\r\n  }\r\n\r\n  validate(values) {\r\n    let errors = {};\r\n    if (!values.Datum)\r\n      errors.Datum = 'Datum naloga je obavezan podatak'\r\n    if (!values.IdTip)\r\n      errors.IdTip = 'Tip naloga je obavezan podatak'\r\n\r\n    if (this.state.data.get('Stavke').isEmpty()) {\r\n      this.form.setStatus({ msg: 'Nalog mora imati bar jednu stavku' });\r\n      errors.Stavke = 'Nalog mora imati bar jednu stavku';\r\n    }\r\n    else {\r\n      this.form.setStatus({ msg: '' });\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  stornirajStavku(id) {\r\n    let newState = this.state.data.updateIn(['Stavke'],\r\n      list => list.update(\r\n        list.findIndex(item => item.get('Id') === id),\r\n        item => item.set('Stornirana', true)));\r\n    this.setState({ data: newState }, () => this.validateForm());\r\n  }\r\n\r\n  ukloniStavku(id) {\r\n    let newState = this.state.data.updateIn(['Stavke'],\r\n      list => {\r\n        const itemIdx = list.findIndex(item => item.get('Id') === id);\r\n        return list.remove(itemIdx)\r\n      });\r\n    this.setState({ data: newState }, () => this.validateForm());\r\n  }\r\n\r\n  dodajStavku(stavka) {\r\n    let newState = this.state.data.updateIn(['Stavke'],\r\n      list => list.push(fromJS(stavka)));\r\n    this.setState({ data: newState }, () => this.validateForm());\r\n  }\r\n\r\n  render() {\r\n    const stavke = this.state.data.toJS().Stavke;\r\n    return (\r\n      <div>\r\n        <Formik\r\n          ref={(r) => this.form = r}\r\n          enableReinitialize={true}\r\n          initialValues={this.state.initialValues}\r\n          validate={this.validate}\r\n          onSubmit={(values, actions) => this.submitForm(values, actions)}\r\n          render={({ values,\r\n            errors,\r\n            status,\r\n            touched,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            validateForm }) => {\r\n            this.validateForm = validateForm;\r\n            return <Form>\r\n              <FormGroup>\r\n                <Label >Datum naloga</Label>\r\n                <Input\r\n                  tag={Field}\r\n                  name='Datum'\r\n                  type='date'\r\n                  component='input'\r\n                />\r\n                <ErrorMessage name=\"Datum\" component=\"div\" className=\"text-danger\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label >Tip naloga</Label>\r\n                <Input\r\n                  tag={Field}\r\n                  name='IdTip'\r\n                  component='select'>\r\n                  <option></option>\r\n                  {this.state.tipovi.map(t =>\r\n                    <option key={t.Id} value={t.Id}>{t.Naziv}</option>)}\r\n                </Input>\r\n                <ErrorMessage name=\"IdTip\" component=\"div\" className=\"text-danger\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label >Opis</Label>\r\n                <Input\r\n                  tag={Field}\r\n                  name='Opis'\r\n                  type='text'\r\n                  component='input'\r\n                />\r\n                <ErrorMessage name=\"Opis\" component=\"div\" className=\"text-danger\" />\r\n              </FormGroup>\r\n              {status && status.msg && <div className=\"text-danger\">{status.msg}</div>}\r\n            </Form>\r\n          }}\r\n        />\r\n        <Link to={`${this.props.url}/nova-stavka`}>\r\n          <Button color=\"success\" className='nova-stavka'><FaPlus />Dodaj stavku</Button>\r\n        </Link>\r\n        <ObradaNalogaPregledStavki stavke={stavke}\r\n          ukloniStavku={this.ukloniStavku} stornirajStavku={this.stornirajStavku} />\r\n        <Route exact path={`${this.props.url}/nova-stavka`}\r\n          render={(props) => <ObradaStavkeForm {...props} dodajStavku={this.dodajStavku} />} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ObradaNalogaForm;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  ModalFooter\r\n} from 'reactstrap';\r\n\r\nimport ObradaNalogaForm from './ObradaNalogaForm';\r\nimport { FaSave } from 'react-icons/fa';\r\n\r\nclass ObradaNaloga extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.setSubmitCallback = this.setSubmitCallback.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  setSubmitCallback(submitForm) {\r\n    this.submitFormCallback = submitForm;\r\n  }\r\n\r\n  submitForm() {\r\n    this.submitFormCallback();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal isOpen={true}>\r\n        <ModalHeader>\r\n          {this.props.match.params.id ? 'Promena naloga' : 'Novi nalog'}\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <ObradaNalogaForm\r\n            idNaloga={this.props.match.params.id}\r\n            setSubmitCallback={this.setSubmitCallback}\r\n            url={this.props.match.url} \r\n            close={this.props.history.goBack}/>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button onClick={this.submitForm} color=\"primary\" size=\"lg\"><FaSave/>Sačuvaj</Button>\r\n          <Button onClick={this.props.history.goBack} size=\"lg\">Nazad</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ObradaNaloga;\r\n","import React, { Component } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'reactstrap'\r\nimport { FaLockOpen, FaLock, FaEdit, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\n\r\nclass GlavnaKnjiga extends Component {\r\n\r\n  render() {\r\n    const cellStyle = {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center'\r\n    }\r\n    const iznosCellStyle = {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      textAlign: 'right'\r\n    }\r\n\r\n    const columns = [{\r\n      Header: 'Datum naloga',\r\n      accessor: 'Datum',\r\n      style: cellStyle,\r\n      Cell: props => <span>{new Date(props.value).toLocaleDateString('sr')}</span>\r\n    }, {\r\n      Header: 'Tip',\r\n      accessor: 'TipNaziv',\r\n      style: cellStyle\r\n    }, {\r\n      Header: 'Opis',\r\n      accessor: 'Opis',\r\n      style: cellStyle\r\n    }, {\r\n      Header: 'Broj stavki',\r\n      accessor: 'BrojStavki',\r\n      style: cellStyle\r\n    }, {\r\n      Header: 'Ukupno duguje',\r\n      accessor: 'UkupnoDuguje',\r\n      style: iznosCellStyle,\r\n      Cell: props => <span>{props.value.toLocaleString('sr',\r\n        { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</span>\r\n    }, {\r\n      Header: 'Ukupno potražuje',\r\n      accessor: 'UkupnoPotrazuje',\r\n      style: iznosCellStyle,\r\n      Cell: props => <span>{props.value.toLocaleString('sr',\r\n        { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</span>\r\n    }, {\r\n      id: 'Zakljucan',\r\n      accessor: 'Zakljucan',\r\n      style: cellStyle,\r\n      Cell: props => props.value ?\r\n        <Button onClick={() => this.props.otkljucajNalog(props.original.Id, props.original.Version)}><FaLockOpen />Otključaj</Button> :\r\n        <Button onClick={() => this.props.zakljucajNalog(props.original.Id, props.original.Version)}><FaLock />Zaključaj</Button>\r\n    }, {\r\n      id: 'Promeni',\r\n      accessor: 'Id',\r\n      style: cellStyle,\r\n      Cell: props => <Link to={`${this.props.url}/${props.value}`}>\r\n        <Button disabled={props.original.Zakljucan}><FaEdit />Promeni</Button>\r\n      </Link>\r\n    }, {\r\n      id: 'Obrisi',\r\n      accessor: 'Id',\r\n      style: cellStyle,\r\n      Cell: props => \r\n        <Button color=\"danger\" disabled={props.original.Zakljucan}\r\n          onClick={() => this.props.obrisiNalog(props.original.Id, props.original.Version)}><FaTrashAlt />Obriši</Button>\r\n    }]\r\n\r\n    return (\r\n      <div>\r\n        <h3 className='page-header'>Glavna knjiga</h3>\r\n        <Link to={`${this.props.url}/novi-nalog`}>\r\n          <Button color='success'><FaPlus />Novi nalog</Button>\r\n        </Link>\r\n        <ReactTable\r\n          data={this.props.nalozi}\r\n          columns={columns}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlavnaKnjiga;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom'\r\nimport ObradaNaloga from './Obrada/ObradaNaloga'\r\nimport Switch from 'react-router-dom/Switch';\r\nimport GlavnaKnjiga from './GlavnaKnjiga'\r\nimport NaloziApi from './NaloziApi';\r\nimport { HubConnectionBuilder, LogLevel } from '@aspnet/signalr';\r\nimport showMessage from 'showMessage';\r\nimport { connect } from 'react-redux';\r\n\r\nclass GlavnaKnjigaContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.zakljucajNalog = this.zakljucajNalog.bind(this);\r\n    this.otkljucajNalog = this.otkljucajNalog.bind(this);\r\n    this.obrisiNalog = this.obrisiNalog.bind(this);\r\n    this.initSignalr = this.initSignalr.bind(this);\r\n    this.startSignalr = this.startSignalr.bind(this);\r\n    this.reloadData = this.reloadData.bind(this);\r\n    this.state = {\r\n      nalozi: []\r\n    };\r\n    this.reconnectSignalr = true;\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.reloadData();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initSignalr();\r\n  }\r\n\r\n  initSignalr() {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(\"glavna-knjiga-hub\", { accessTokenFactory: () => this.props.access_token })\r\n      //.withUrl(\"glavna-knjiga-hub\")      \r\n      .configureLogging(LogLevel.Trace)\r\n      .build();\r\n    this.hubConnection.on('data-changed', () => {\r\n      this.reloadData();\r\n    });\r\n    this.hubConnection.on('knjizenje-error', (error) => {\r\n      let valErrors = error.validationErrors &&\r\n        error.validationErrors.map(e => ` - ${e.message}`).join('\\r\\n');\r\n      showMessage.error(error.message, 'Greška pri knjiženju', valErrors)\r\n    });\r\n    this.hubConnection.onclose(() => {\r\n      if (this.reconnectSignalr) {\r\n        this.startSignalr();\r\n      }\r\n    });\r\n    this.startSignalr();\r\n  }\r\n\r\n  startSignalr() {\r\n    this.hubConnection.start()\r\n      .catch(err => {\r\n        if(err.message)\r\n          showMessage.error(`SignalR: ${err.message}`);\r\n        setTimeout(() => this.startSignalr(), 10000);\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Stopping SignalR...')\r\n    this.reconnectSignalr = false;\r\n    this.hubConnection.stop();\r\n  }\r\n\r\n  reloadData() {\r\n    NaloziApi.getGlavnaKnjiga()\r\n      .then(nalozi => this.setState({ nalozi: nalozi }));\r\n  }\r\n\r\n  zakljucajNalog(id, version) {\r\n    NaloziApi.zakljucaj(id, version);\r\n  }\r\n\r\n  otkljucajNalog(id, version) {\r\n    NaloziApi.otkljucaj(id, version);\r\n  }\r\n\r\n  obrisiNalog(id, version) {\r\n    NaloziApi.obrisi(id, version);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <GlavnaKnjiga zakljucajNalog={this.zakljucajNalog}\r\n          otkljucajNalog={this.otkljucajNalog}\r\n          obrisiNalog={this.obrisiNalog}\r\n          nalozi={this.state.nalozi}\r\n          url={this.props.match.url} />\r\n        <Switch>\r\n          <Route path={`${this.props.match.url}/novi-nalog`} component={ObradaNaloga} />\r\n          <Route path={`${this.props.match.url}/:id`} component={ObradaNaloga} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    access_token: state.oidc.user.access_token\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dispatch\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GlavnaKnjigaContainer);","import 'whatwg-fetch';\r\nimport { parseJson } from 'utils'\r\nimport store from \"store\";\r\n\r\nconst KarticaKontaApi = {\r\n\r\n  getKarticaKonta: (id) => {\r\n    return fetch(`/api/karticaKonta/${id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization : `Bearer ${store.getState().oidc.user.access_token}`\r\n      }\r\n    }).then(parseJson)\r\n  },\r\n}\r\n\r\nexport default KarticaKontaApi;","import React, { Component } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport KarticaKontaApi from './KarticaKontaApi';\r\nimport KontaApi from 'Common/KontaApi';\r\nimport { Button, Input, InputGroup } from 'reactstrap';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nclass KarticaKonta extends Component {\r\n\r\n  render() {\r\n    const cellStyle = {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center'\r\n    }\r\n    const iznosCellStyle = {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      textAlign: 'right'\r\n    }\r\n\r\n    const columns = [{\r\n      Header: 'Datum naloga',\r\n      accessor: 'DatumNaloga',\r\n      style: cellStyle,\r\n      Cell: props => <span>{new Date(props.value).toLocaleDateString('sr')}</span>\r\n    }, {\r\n      Header: 'Tip naloga',\r\n      accessor: 'TipNaloga',\r\n      style: cellStyle\r\n    }, {\r\n      Header: 'Datum knjiženja',\r\n      accessor: 'DatumKnjizenja',\r\n      style: cellStyle,\r\n      Cell: props => <span>{new Date(props.value).toLocaleDateString('sr')}</span>\r\n    }, {\r\n      Header: 'Konto',\r\n      accessor: 'Konto',\r\n      style: cellStyle\r\n    }, {\r\n      Header: 'Opis',\r\n      accessor: 'Opis',\r\n      style: cellStyle\r\n    }, {\r\n      Header: 'Duguje',\r\n      accessor: 'Duguje',\r\n      style: iznosCellStyle,\r\n      Cell: props => <span>{props.value.toLocaleString('sr',\r\n        { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</span>\r\n    }, {\r\n      Header: 'Potražuje',\r\n      accessor: 'Potrazuje',\r\n      style: iznosCellStyle,\r\n      Cell: props => <span>{props.value.toLocaleString('sr',\r\n        { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</span>\r\n    }, {\r\n      Header: 'Saldo kumulativno',\r\n      accessor: 'SaldoKumulativno',\r\n      style: iznosCellStyle,\r\n      Cell: props => <span>{props.value.toLocaleString('sr',\r\n        { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</span>\r\n    }]\r\n\r\n    return (\r\n      <div>\r\n        <h3 className='page-header'>Kartica konta</h3>\r\n        <InputGroup style={{width:300}}>\r\n          <Input\r\n            onChange={(e) => this.props.setKonto(e.target.value)}\r\n            type='select'>\r\n            <option></option>\r\n            {this.props.konta.map(t =>\r\n              <option key={t.Id} value={t.Id}>{t.Sifra} {t.Naziv}</option>)}\r\n          </Input>\r\n          <Button onClick={this.props.reloadData}><FaSearch/>Pregled</Button>\r\n        </InputGroup>\r\n        <ReactTable\r\n          data={this.props.kartica}\r\n          columns={columns}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KarticaKonta;\r\n","import React, { Component } from 'react';\r\nimport KarticaKonta from './KarticaKonta';\r\nimport KarticaKontaApi from './KarticaKontaApi';\r\nimport KontaApi from 'Common/KontaApi';\r\n\r\nclass KarticaKontaContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.reloadData = this.reloadData.bind(this);\r\n    this.setKonto = this.setKonto.bind(this);\r\n    this.state = {\r\n      kartica: [],\r\n      konta: [],\r\n      idKonto: null\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    KontaApi.getKonta()\r\n      .then(konta => this.setState({\r\n        konta: konta || []\r\n      }));\r\n  }\r\n\r\n  reloadData() {\r\n    if (this.state.idKonto) {\r\n      KarticaKontaApi.getKarticaKonta(this.state.idKonto)\r\n        .then(kartica => this.setState({ kartica: kartica }));\r\n    }\r\n  }\r\n\r\n  setKonto(idKonto) {\r\n    this.setState({ idKonto });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <KarticaKonta kartica={this.state.kartica}\r\n        konta={this.state.konta}\r\n        setKonto={this.setKonto}\r\n        reloadData={this.reloadData}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KarticaKontaContainer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CallbackComponent } from \"redux-oidc\";\r\nimport userManager from \"userManager\";\r\n\r\nclass CallbackPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <CallbackComponent\r\n                userManager={userManager}\r\n                successCallback={() => {\r\n                    console.log('success');\r\n                    this.props.history.push(\"/\");\r\n                }}\r\n                errorCallback={error => {\r\n                    console.error(error);\r\n                    this.props.history.push(\"/\");\r\n                }}>\r\n                <div>Redirecting...</div>\r\n            </CallbackComponent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(CallbackPage);","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from 'Home';\r\nimport GlavnaKnjiga from '../GlavnaKnjiga'\r\nimport KarticaKonta from '../KarticaKonta'\r\nimport CallbackPage from '../CallbackPage'\r\nimport { IconContext } from \"react-icons\";\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nconst Main = () => (\r\n  <IconContext.Provider value={{ className: \"icon\" }}>\r\n    <main>\r\n      <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/glavna-knjiga' component={GlavnaKnjiga} />\r\n        <Route exact path='/kartica-konta' component={KarticaKonta} />\r\n      </Switch>\r\n      <ToastContainer />\r\n    </main>\r\n  </IconContext.Provider>\r\n)\r\n\r\nexport default Main","import React from \"react\";\r\nimport userManager from \"userManager\";\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n  login(event) {\r\n    userManager.signinRedirect();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.root}>\r\n        <h3>Simple ERP demo aplikacija</h3>\r\n        <p>Prijavite se za nastavak</p>\r\n        <button onClick={this.login}>Prijava</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    flexShrink: 1\r\n  }\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header'\r\nimport Main from './Main'\r\nimport userManager from 'userManager';\r\nimport LoginPage from './LoginPage';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass Entry extends Component {\r\n\r\n  render() {\r\n    let user = this.props.user;\r\n\r\n    if (!user || user.expired) {\r\n      return <LoginPage />\r\n    }\r\n    else {\r\n      return <div>\r\n        <Header />\r\n        <Main />\r\n      </div>\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.oidc.user\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dispatch\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Entry));\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { OidcProvider } from 'redux-oidc';\r\nimport Header from './Header'\r\nimport Main from './Main'\r\nimport Entry from './Entry'\r\nimport store from 'store';\r\nimport userManager from 'userManager';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport CallbackPage from '../CallbackPage'\r\n\r\nimport './bootstrap.min-cosmo.css';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <OidcProvider store={store} userManager={userManager}>\r\n          <div>\r\n            <Entry />\r\n            <Route exact path='/callback' component={CallbackPage} />\r\n          </div>\r\n        </OidcProvider>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'App';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport { processSilentRenew } from 'redux-oidc';\r\n\r\nif (window.location.pathname === '/silent-renew') {\r\n    processSilentRenew();\r\n} else {\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>,\r\n        document.getElementById('root'));\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}